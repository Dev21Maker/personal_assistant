{
    "name": "Integration Google Chat, Llama AI by Makemarket.io",
    "flow": [
        {
            "id": 21,
            "module": "superchat:newInboundMessage",
            "version": 1,
            "parameters": {
                "__IMTHOOK__": 1440691
            },
            "mapper": {},
            "metadata": {
                "designer": {
                    "x": -1020,
                    "y": 45
                },
                "restore": {
                    "parameters": {
                        "__IMTHOOK__": {
                            "data": {
                                "editable": "false"
                            },
                            "label": "My New inbound message webhook"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTHOOK__",
                        "type": "hook:superchat2",
                        "label": "Webhook",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 57,
            "module": "http:ActionSendDataAPIKeyAuth",
            "version": 3,
            "parameters": {
                "auth": 51834,
                "handleErrors": false
            },
            "mapper": {
                "url": "https://api.openai.com/v1/threads/runs",
                "serializeUrl": false,
                "method": "post",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "name": "OpenAI-Beta",
                        "value": "assistants=v2"
                    }
                ],
                "qs": [],
                "bodyType": "raw",
                "parseResponse": true,
                "timeout": "",
                "shareCookies": false,
                "ca": "",
                "rejectUnauthorized": true,
                "followRedirect": true,
                "useQuerystring": false,
                "gzip": true,
                "useMtls": false,
                "contentType": "application/json",
                "data": "{\n  \"assistant_id\" : \"asst_NDSLSOMmaWMD9mat76wbj8wW\",  \n\"thread\" : {\n    \"messages\" : [{\n        \"role\": \"user\",\n        \"content\" : \"{{21.message.content.body}}\"\n      }]\n  }\n}",
                "followAllRedirects": false
            },
            "metadata": {
                "designer": {
                    "x": -719,
                    "y": 41
                },
                "restore": {
                    "parameters": {
                        "auth": {
                            "label": "Authorization New"
                        }
                    },
                    "expect": {
                        "method": {
                            "mode": "chose",
                            "label": "POST"
                        },
                        "headers": {
                            "mode": "chose",
                            "items": [
                                null,
                                null
                            ]
                        },
                        "qs": {
                            "mode": "chose"
                        },
                        "bodyType": {
                            "label": "Raw"
                        },
                        "contentType": {
                            "label": "JSON (application/json)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "auth",
                        "type": "keychain:apikeyauth",
                        "label": "Credentials",
                        "required": true
                    },
                    {
                        "name": "handleErrors",
                        "type": "boolean",
                        "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "url",
                        "type": "url",
                        "label": "URL",
                        "required": true
                    },
                    {
                        "name": "serializeUrl",
                        "type": "boolean",
                        "label": "Serialize URL",
                        "required": true
                    },
                    {
                        "name": "method",
                        "type": "select",
                        "label": "Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "get",
                                "head",
                                "post",
                                "put",
                                "patch",
                                "delete",
                                "options"
                            ]
                        }
                    },
                    {
                        "name": "headers",
                        "type": "array",
                        "label": "Headers",
                        "spec": [
                            {
                                "name": "name",
                                "label": "Name",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "text"
                            }
                        ]
                    },
                    {
                        "name": "qs",
                        "type": "array",
                        "label": "Query String",
                        "spec": [
                            {
                                "name": "name",
                                "label": "Name",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "text"
                            }
                        ]
                    },
                    {
                        "name": "bodyType",
                        "type": "select",
                        "label": "Body type",
                        "validate": {
                            "enum": [
                                "raw",
                                "x_www_form_urlencoded",
                                "multipart_form_data"
                            ]
                        }
                    },
                    {
                        "name": "parseResponse",
                        "type": "boolean",
                        "label": "Parse response",
                        "required": true
                    },
                    {
                        "name": "timeout",
                        "type": "uinteger",
                        "label": "Timeout",
                        "validate": {
                            "max": 300,
                            "min": 1
                        }
                    },
                    {
                        "name": "shareCookies",
                        "type": "boolean",
                        "label": "Share cookies with other HTTP modules",
                        "required": true
                    },
                    {
                        "name": "ca",
                        "type": "cert",
                        "label": "Self-signed certificate"
                    },
                    {
                        "name": "rejectUnauthorized",
                        "type": "boolean",
                        "label": "Reject connections that are using unverified (self-signed) certificates",
                        "required": true
                    },
                    {
                        "name": "followRedirect",
                        "type": "boolean",
                        "label": "Follow redirect",
                        "required": true
                    },
                    {
                        "name": "useQuerystring",
                        "type": "boolean",
                        "label": "Disable serialization of multiple same query string keys as arrays",
                        "required": true
                    },
                    {
                        "name": "gzip",
                        "type": "boolean",
                        "label": "Request compressed content",
                        "required": true
                    },
                    {
                        "name": "useMtls",
                        "type": "boolean",
                        "label": "Use Mutual TLS",
                        "required": true
                    },
                    {
                        "name": "contentType",
                        "type": "select",
                        "label": "Content type",
                        "validate": {
                            "enum": [
                                "text/plain",
                                "application/json",
                                "application/xml",
                                "text/xml",
                                "text/html",
                                "custom"
                            ]
                        }
                    },
                    {
                        "name": "data",
                        "type": "buffer",
                        "label": "Request content"
                    },
                    {
                        "name": "followAllRedirects",
                        "type": "boolean",
                        "label": "Follow all redirect",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 80,
            "module": "util:SetVariables",
            "version": 1,
            "parameters": {},
            "mapper": {
                "variables": [
                    {
                        "name": "threadId",
                        "value": "{{57.data.thread_id}}"
                    },
                    {
                        "name": "runId",
                        "value": "{{57.data.id}}"
                    },
                    {
                        "name": "assistantId",
                        "value": "{{57.data.assistant_id}}"
                    }
                ],
                "scope": "roundtrip"
            },
            "metadata": {
                "designer": {
                    "x": -421,
                    "y": 51
                },
                "restore": {
                    "expect": {
                        "variables": {
                            "items": [
                                null,
                                null,
                                null
                            ]
                        },
                        "scope": {
                            "label": "One cycle"
                        }
                    }
                },
                "expect": [
                    {
                        "name": "variables",
                        "type": "array",
                        "label": "Variables",
                        "spec": [
                            {
                                "name": "name",
                                "label": "Variable name",
                                "type": "text",
                                "required": true
                            },
                            {
                                "name": "value",
                                "label": "Variable value",
                                "type": "any"
                            }
                        ]
                    },
                    {
                        "name": "scope",
                        "type": "select",
                        "label": "Variable lifetime",
                        "required": true,
                        "validate": {
                            "enum": [
                                "roundtrip",
                                "execution"
                            ]
                        }
                    }
                ],
                "interface": [
                    {
                        "name": "threadId",
                        "label": "threadId",
                        "type": "any"
                    },
                    {
                        "name": "runId",
                        "label": "runId",
                        "type": "any"
                    },
                    {
                        "name": "assistantId",
                        "label": "assistantId",
                        "type": "any"
                    }
                ]
            }
        },
        {
            "id": 79,
            "module": "onesaas:codepython",
            "version": 2,
            "parameters": {
                "__IMTCONN__": 4710007
            },
            "mapper": {
                "requirements": [
                    "openai"
                ],
                "pythonCode": "import time\nfrom openai import OpenAI\nimport os\n\nos.environ['OPENAI_API_KEY'] = \"{{var.input.OPEN_AI_API_KEY}}\"\n\n# Make sure your API key is set as an environment variable.\nclient = OpenAI()\nrun = client.beta.threads.runs.retrieve(run_id=\"{{80.runId}}\", thread_id=\"{{80.threadId}}\")\n# Wait for run to complete.\nwhile run.status != \"completed\":\n    run = client.beta.threads.runs.retrieve(thread_id=\"{{80.threadId}}\" , run_id=\"{{80.runId}}\")\n    print(f\"🏃 Run Status: {run.status}\")\n    time.sleep(1)\nelse:\n    print(f\"🏁 Run Completed!\")\n\n# Get the latest message from the thread.\nmessage_response = client.beta.threads.messages.list(thread_id=\"{{80.threadId}}\")\nmessages = message_response.data\nnew_list = []  # Initialize an empty list\nfor message in messages:\n    new_list.append(message.content[0].text.value)\n# Print the latest message.\nlatest_message = new_list\nresult = { 'data': latest_message }"
            },
            "metadata": {
                "designer": {
                    "x": -112,
                    "y": 42
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "My 0-CodeKit connection (2)",
                            "data": {
                                "scoped": "true",
                                "connection": "onesaas2"
                            }
                        }
                    },
                    "expect": {
                        "otherInputParameters": {
                            "mode": "chose"
                        },
                        "requirements": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:onesaas2",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "otherInputParameters",
                        "type": "array",
                        "label": "Other Input Parameters",
                        "spec": [
                            {
                                "name": "key",
                                "type": "text",
                                "label": "Key"
                            },
                            {
                                "name": "value",
                                "type": "any",
                                "label": "Value"
                            }
                        ]
                    },
                    {
                        "name": "requirements",
                        "type": "array",
                        "label": "Requirements",
                        "spec": {
                            "type": "text",
                            "name": "value"
                        }
                    },
                    {
                        "name": "pythonCode",
                        "type": "text",
                        "label": "Your Python Code",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 85,
            "module": "builtin:BasicAggregator",
            "version": 1,
            "parameters": {
                "feeder": 79
            },
            "mapper": {
                "result": "{{79.result}}"
            },
            "metadata": {
                "designer": {
                    "x": 183,
                    "y": 43
                },
                "restore": {
                    "extra": {
                        "feeder": {
                            "label": "0CodeKit - Run Python Code [79]"
                        },
                        "target": {
                            "label": "Custom"
                        }
                    }
                }
            }
        },
        {
            "id": 86,
            "module": "builtin:BasicFeeder",
            "version": 1,
            "parameters": {},
            "mapper": {
                "array": "{{85.array}}"
            },
            "metadata": {
                "designer": {
                    "x": 477,
                    "y": 44
                },
                "restore": {
                    "expect": {
                        "array": {
                            "mode": "edit"
                        }
                    }
                },
                "expect": [
                    {
                        "name": "array",
                        "type": "array",
                        "label": "Array",
                        "mode": "edit",
                        "spec": []
                    }
                ]
            }
        },
        {
            "id": 87,
            "module": "builtin:BasicRepeater",
            "version": 1,
            "parameters": {},
            "mapper": {
                "start": "1",
                "repeats": "{{86.`__IMTLENGTH__`}}",
                "step": "1"
            },
            "metadata": {
                "designer": {
                    "x": 777,
                    "y": 44
                },
                "restore": {},
                "expect": [
                    {
                        "name": "start",
                        "type": "number",
                        "label": "Initial value",
                        "required": true
                    },
                    {
                        "name": "repeats",
                        "type": "number",
                        "label": "Repeats",
                        "validate": {
                            "min": 0,
                            "max": 10000
                        },
                        "required": true
                    },
                    {
                        "name": "step",
                        "type": "number",
                        "label": "Step",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 18,
            "module": "superchat:sendAMessage",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 4684918
            },
            "filter": {
                "name": "isNotMyMessage",
                "conditions": [
                    [
                        {
                            "a": "{{87.i}}",
                            "o": "text:notequal:ci",
                            "b": "{{21.message.content.body}}"
                        }
                    ]
                ]
            },
            "mapper": {
                "identifier": "{{21.message.from.id}}",
                "channel_id": "{{21.message.to.channel_id}}",
                "type": "text",
                "body": "{{86.result.data[87.i]}}"
            },
            "metadata": {
                "designer": {
                    "x": 1098,
                    "y": 44
                },
                "restore": {
                    "parameters": {
                        "__IMTCONN__": {
                            "label": "My Superchat connection (dev21maker@gmail.com)",
                            "data": {
                                "scoped": "true",
                                "connection": "superchat"
                            }
                        }
                    },
                    "expect": {
                        "channel_id": {
                            "mode": "edit"
                        },
                        "type": {
                            "mode": "chose",
                            "label": "Text message"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:superchat",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "identifier",
                        "type": "text",
                        "label": "To",
                        "required": true
                    },
                    {
                        "name": "channel_id",
                        "type": "select",
                        "label": "Communication channel",
                        "required": true
                    },
                    {
                        "name": "name",
                        "type": "text",
                        "label": "Sender name"
                    },
                    {
                        "name": "type",
                        "type": "select",
                        "label": "Message type",
                        "validate": {
                            "enum": [
                                "text",
                                "media"
                            ]
                        }
                    },
                    {
                        "name": "body",
                        "type": "text",
                        "label": "Text",
                        "required": true
                    }
                ]
            }
        }
    ],
    "metadata": {
        "instant": true,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null,
            "confidential": false,
            "dataloss": false,
            "dlq": false,
            "freshVariables": false
        },
        "designer": {
            "orphans": []
        },
        "zone": "eu2.make.com",
        "notes": []
    },
    "io": {
        "input_spec": [
            {
                "name": "OPEN_AI_API_KEY",
                "label": "",
                "type": "text",
                "default": "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",
                "required": false,
                "multiline": false
            }
        ],
        "output_spec": []
    }
}